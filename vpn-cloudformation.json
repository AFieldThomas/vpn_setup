{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "AWS in Action: chapter 5 (OpenSwan acting as VPN IPSec endpoint)",
	"Parameters": {
		"envPrefix": {
	      "Description": "Environment name prefix.",
	      "Type": "String",
	      "Default": "Test"
	    },
		"KeyName": {
			"Description": "key for SSH access",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription": "Must be the name of an existing key pair."
		},
		"IPSecSharedSecret": {
			"Description": "The shared secret key for IPSec.",
			"Type": "String"
		},
		"VPNUser": {
			"Description": "The VPN user.",
			"Type": "String"
		},
		"VPNPassword": {
			"Description": "The VPN password.",
			"Type": "String"
		}
	},
	"Mappings": {
		"EC2RegionMap": {
			"ap-northeast-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-cbf90ecb"},
			"ap-southeast-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-68d8e93a"},
			"ap-southeast-2": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-fd9cecc7"},
			"eu-central-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-a8221fb5"},
			"eu-west-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-a10897d6"},
			"sa-east-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-b52890a8"},
			"us-east-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-1ecae776"},
			"us-west-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-d114f295"},
			"us-west-2": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-e7527ed7"}
		}
	},
	"Resources": {

		"vpc": {
	      "Type": "AWS::EC2::VPC",
	      "Properties": {
	        "CidrBlock": "10.4.0.0/16",
	        "InstanceTenancy": "default",
	        "EnableDnsSupport": "true",
	        "EnableDnsHostnames": "true",
	        "Tags": [
	          {
	            "Key": "Name",
	            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "VPC"]]}
	          }
	        ]
	      }
	    },
	    "publicSubnet1": {
	      "Type": "AWS::EC2::Subnet",
	      "DependsOn": ["vpc", "attachGateway"],
	      "Properties": {
	        "CidrBlock": "10.4.0.0/24",
	        "VpcId": {"Ref": "vpc"},
	        "MapPublicIpOnLaunch": true,
	        "Tags": [
	          {
	            "Key": "Name",
	            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "Subnet-Public-1"]]}
	          }
	        ]
	      }
	    },
	    "inetGateway": {
	      "Type": "AWS::EC2::InternetGateway",
	      "DependsOn": ["vpc"],
	      "Properties": {
	        "Tags": [
	          {
	            "Key": "Name",
	            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "InternetGateway"]]}
	          }
	        ]
	      }
	    },
	    "attachGateway": {
	      "Type": "AWS::EC2::VPCGatewayAttachment",
	      "DependsOn": ["vpc", "inetGateway"],
	      "Properties": {
	        "VpcId": {"Ref": "vpc"},
	        "InternetGatewayId": {"Ref": "inetGateway"}
	      }
	    },
	    "rtbPublic": {
	      "Type": "AWS::EC2::RouteTable",
	      "DependsOn": ["vpc", "attachGateway"],
	      "Properties": {
	        "VpcId": {"Ref": "vpc"},
	        "Tags": [
	          {
	            "Key": "Name",
	            "Value": {"Fn::Join" : ["-", [{"Ref" : "envPrefix"}, "RTB-Public"]]}
	          }
	        ]
	      }
	    },
	    "routePublic": {
	      "Type": "AWS::EC2::Route",
	      "DependsOn": ["rtbPublic"],
	      "Properties": {
	        "DestinationCidrBlock": "0.0.0.0/0",
	        "RouteTableId": {"Ref": "rtbPublic"},
	        "GatewayId": {"Ref": "inetGateway"}
	      },
	      "DependsOn": "attachGateway"
	    },
	    "subnetRouteTableAssociationPublic1": {
	      "Type": "AWS::EC2::SubnetRouteTableAssociation",
	      "DependsOn": ["rtbPublic", "publicSubnet1"],
	      "Properties": {
	        "RouteTableId": {"Ref": "rtbPublic"},
	        "SubnetId": {"Ref": "publicSubnet1"}
	      }
	    },

		"EC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.micro",
				"SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}],
				"KeyName": {"Ref": "KeyName"},
				"ImageId": {"Fn::FindInMap": ["EC2RegionMap", {"Ref": "AWS::Region"}, "AmazonLinuxAMIHVMEBSBacked64bit"]},
				"SubnetId": {"Ref": "publicSubnet1"},
				"UserData": {"Fn::Base64": {"Fn::Join": ["", [
					"#!/bin/bash -ex\n",
					"export IPSEC_PSK=", {"Ref": "IPSecSharedSecret"}, "\n",
					"export VPN_USER=", {"Ref": "VPNUser"}, "\n",
					"export VPN_PASSWORD=", {"Ref": "VPNPassword"}, "\n",
					"export STACK_NAME=", {"Ref": "AWS::StackName"}, "\n",
					"export REGION=", {"Ref": "AWS::Region"}, "\n",
					"curl -s ./vpn-setup.sh | bash -ex\n"
				]]}}
			}
		},
		"InstanceSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable access to VPN server",
				"VpcId": {"Ref": "vpc"},
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "500",
						"ToPort": "500",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "1701",
						"ToPort": "1701",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "4500",
						"ToPort": "4500",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		}
	},
	"Outputs": {
		"ServerIP": {
			"Description": "Public IP address of the vpn server",
			"Value": {"Fn::GetAtt": ["EC2Instance", "PublicIp"]}
		},
		"IPSecSharedSecret": {
			"Description": "The shared key for the VPN connection (IPSec)",
			"Value": {"Ref": "IPSecSharedSecret"}
		},
		"VPNUser": {
			"Description": "The username for the vpn connection",
			"Value": {"Ref": "VPNUser"}
		},
		"VPNPassword": {
			"Description": "The password for the vpn connection",
			"Value": {"Ref": "VPNPassword"}
		}
	}
}